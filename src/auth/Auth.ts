import express from 'express'
import { verifyToken } from '../controller/UserController'
const UserModel = require('../model/UserModel.ts')
const KeyList = require('../model/keyList')
const SwiftKeyList = require('../model/SwiftKeyList')


//registering user Authentication
export async function Auth(req, res, next) {
    try {
        let token = req.headers['access-token'] as string
        if(!token || token == "") return res.status(401).json({msg: 'UnAuthorized User'})
        let decoded = verifyToken(token)
        if(decoded != null){
            req.user = decoded.user
            next()
        }
        else {
          return res.status(401).json({msg: 'UnAuthorized User'})
        }
    } catch(err) {
        return res.status(401).json({msg: 'please login again'})
    }
}



//check key if this key is generated by the same user
export async function checkKeyActivation(req, res, next) {
    try {
        let usr = req.user
        let activationKey = req.query.key
        let user = await UserModel.findOne({user: usr})
        if(user != null || user != undefined) {
            let registeredKey = await KeyList.findOne({key: activationKey})
            if(registeredKey && registeredKey.user == user.user) {
                let verifyKey = verifyToken(activationKey)
                if(verifyKey) next()
                else return res.status(404).json({msg: 'key validity expired'})
            }
           else return res.status(401).json({msg: 'you did not created this key'})
        }
        else return res.status(401).json({msg: 'you are not an Authorized user'})
    } 
    catch(err) {
        return res.status(401).json({msg: 'key validity expired or you didnt created this key'})
    }
}


export async function checkKeyRegistration(req: express.Request,res: express.Response,next: express.NextFunction) {
    try{
        let actkey =  req.query.key as string
        let mac_id =  req.query.mac_id as string
        console.log("Check key Registration Middleware => " + actkey + " " + mac_id)
        if(actkey == undefined || actkey == '' || mac_id == undefined || mac_id == '') return res.status(400).json({msg: 'please provide key and mac_id'})
        let registeredKey = await KeyList.findOne({key: actkey})
        if(registeredKey) {
            let currdate = new Date().getTime()
            let olddate = new Date(registeredKey.date).getTime()
            let diff = Math.abs(currdate - <any>olddate)
            if((diff/86400000) <= 32 && (diff/86400000) >= 0) next()        
            else return res.status(401).json({msg: 'key validity expired'})
        }
        else return res.status(401).json({msg: 'invalid key'})        
    }
    catch(err) {
        console.log(err)
        return res.status(500).json({msg: 'Invalid key'})
    }
}

//check swift key registration
export async function checkSwiftKeyRegistration(req: express.Request,res: express.Response,next: express.NextFunction) {
    try{
        let actkey =  req.query.key as string
        let mac_id =  req.query.mac_id as string
        if(actkey == undefined || actkey == '' || mac_id == undefined || mac_id == '') return res.status(400).json({msg: 'please provide key and mac_id'})
        let registeredKey = await SwiftKeyList.findOne({key: actkey})
        if(registeredKey) {
            let currdate = new Date().getTime()
            let olddate = new Date(registeredKey.date).getTime()
            let diff = Math.abs(currdate - <any>olddate)
            if((diff/86400000) <= 32 && (diff/86400000) >= 0) next()        
            else return res.status(401).json({msg: 'key validity expired'})
        }
        else return res.status(401).json({msg: 'invalid key'})        
    }
    catch(err) {
        console.log(err)
        return res.status(500).json({msg: 'Invalid key'})
    }
}